---
import Logo from "~/components/Logo";
import Tag from "~/components/tag.html";
import { langs, useTranslations, useUrl } from "~/i18n";
import Layout from "~/layouts/Layout.astro";
import Card from "~components/Card";
import Cards from "~components/Cards";
import { getRecipes } from "~content/collections/recipes";
import { getStacks } from "~content/collections/stacks";

export const getStaticPaths = () => {
  return langs.map((lang) => ({ params: { lang } }));
};

const lang = Astro.params.lang;
const t = useTranslations(lang);
const url = useUrl(lang);

const title = t("Recipes");

const stacks = getStacks(lang);

const recipes = getRecipes(lang);
recipes.forEach((recipe) => {
  recipe.data.dependencies =
    recipe.data.dependencies?.map(({ name, icon, custom }) => ({
      custom,
      ...(custom && {
        name,
        slug: name.toLowerCase(),
        icon: icon ?? name.toLowerCase(),
      }),
      ...(!custom && stacks.find((stack) => stack.data.slug === name)?.data),
    })) ?? ([] as any);
});
---

<Layout lang={lang} title={title}>
  <div slot="left" class="section">
    <div class="container">
      <!-- <span class="suptitle">{t("Recipes")}</span> -->
      <h1 set:html={t("*Curated Recipes* of powerful stack combinations.")} />
      <p
        class="subtle mb-8"
        set:html={t(
          "Recipes are curated stack combinations. Each recipe is a collection of stacks that work well together."
        )}
      />
    </div>
  </div>

  <div class="section">
    <div class="container">
      <Cards>
        {
          recipes
            .sort((a: any, b: any) => b.data.updated_at - a.data.updated_at)
            .map(
              ({
                data: {
                  slug,
                  name,
                  icon,
                  updated_at,
                  description,
                  dependencies,
                },
              }) => (
                <li class="pb-8">
                  <Card
                    lang={lang}
                    slug={slug}
                    name={name}
                    description={description}
                    updated_at={updated_at}
                    url={url(`/recipes/${slug}`)}
                    {...(icon && { icon })}
                  >
                    <div class="absolute end-0 top-6 pr-4 pl-36 block gap-2 z-10 text-sm select-none pointer-events-none transition-opacity ">
                      <span class="hidden md:flex flex-row gap-2">
                        {dependencies?.map((dep: any) => (
                          <Tag>
                            <Logo slug={dep.slug} />
                            &nbsp;
                            {dep.name}
                          </Tag>
                        ))}
                      </span>
                    </div>
                  </Card>
                </li>
              )
            )
        }
      </Cards>
    </div>
  </div>
</Layout>
