---
import { ClientRouter } from "astro:transitions";
import { Debug } from "~/components/Debug";
import Navbar from "~/components/Navbar.astro";
import {
  langs,
  languages,
  textDirection,
  useTranslations,
  useUrl,
} from "~/i18n";
import Logo from "~components/Logo";
import { DarkModeSwitcher } from "~components/DarkModeSwitcher";

const {
  lang = "en",
  title,
  description,
  leftTransition,
  mainClass,
} = Astro.props;

const t = useTranslations(lang);
const url = useUrl(lang);
---

<html lang={lang} dir={textDirection(lang)}>
  <head>
    <ClientRouter />
    <meta charset="utf-8" />
    <link rel="icon" type="image/png" href="/32x32.png" />
    <meta
      name="viewport"
      content="width=device-width, initial-scale=1, maximum-scale=5"
    />
    <title>{title ? `${title} · Stack` : "Stack"}</title>
    {description && <meta name="description" content={description} />}
    <link rel="sitemap" href="/sitemap-index.xml" />
    {
      langs.map((lang) => (
        <link
          rel="alternate"
          hreflang={lang || "en"}
          href={`https://stack.lol/${lang}`}
        />
      ))
    }
    {
      langs.map((lang) => (
        <link
          rel="alternate"
          hreflang={lang || "en"}
          type="application/rss+xml"
          title={`Stack RSS Feed (${languages[lang || "en"]})`}
          href={new URL(`${lang}/rss`, Astro.site)}
        />
      ))
    }
    <slot name="head" />
    <style is:global>
      @tailwind base;
      @tailwind components;
      @tailwind utilities;

      :root {
        font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto,
          Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji",
          "Segoe UI Symbol";
        /* font-size: 14px;
  line-height: 24px; */
        font-weight: 400;

        scrollbar-gutter: stable;
        scroll-behavior: smooth;

        --main-max-width: 115.2rem;
      }

      a {
        position: relative;
      }

      [data-title] {
        position: relative;
      }
      [data-title]:hover::after {
        content: attr(data-title);
        position: absolute;
        top: 1em;
        right: 0;
        display: inline-block;
        width: 12em;
        margin: 2em auto 0;
        font-size: 1rem;
        line-height: 1rem;
        background: #666;
        color: #fff;
        padding: 0.25em 0.5em;
        border-radius: 0.5em;
        z-index: 20;
        text-align: center;
        justify-content: center;
      }

      a[aria-disabled="true"] {
        color: #777;
        cursor: not-allowed;
      }

      summary {
        cursor: pointer;
      }

      @media screen {
        [role="main"] {
          /* max-width: 800px; */
          margin: 1.5em auto;
          padding: 0 2em;
        }
        .expand-beyond-main {
          margin: 0 calc(400px - 50vw - 0.75em);
        }
      }

      #navbar {
        grid-area: navbar;
        /* grid-column: 1 / -1; */
      }
      #footer {
        grid-area: footer;
        width: 100%;
        /* grid-column: 1 / -1; */
      }
      #left {
        grid-area: left;
        /* grid-column: 1; */
      }
      #content {
        grid-area: content;
        width: 100%;
        /* grid-column: 2; */
      }
      #right {
        grid-area: right;
        /* grid-column: 3; */
      }

      @media (max-width: 600px) {
        .expand-beyond-main {
          margin: 0 -0.5em 0 0;
        }
      }
      /* The layout goes multi-column as soon as width reaches 96rem wide */
      @media (min-width: 96rem) {
        [role="main"] {
          max-width: var(--main-max-width);
          display: grid;
          grid-template-columns: 21em 1fr 21em;
          grid-template-areas:
            "navbar navbar navbar"
            "left content right"
            "left footer right";
          grid-gap: 0 2em;
          &.left-only {
            grid-template-columns: 21em 1fr;
            grid-template-areas:
              "navbar navbar"
              "left content"
              "left footer";
            grid-gap: 0 2em;
          }
        }
        .expand-beyond-main {
          margin: 0 calc(57.6rem - 50vw);
        }
      }

      ol {
        /* display: grid;
  grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));
  gap: 1rem; */
        padding: 0;
        list-style: none;
      }

      ol > li {
        break-inside: avoid;
      }

      svg[role="img"] {
        /* float: right;
  width: 1.5em;
  height: 1.5em; */
        display: inline-flex;
        width: 1em;
        height: 1em;
        /* margin-top: 0.25em;
  margin-left: 0.5em; */
        /* margin-right: 0.5em; */
      }

      .icon > svg[role="img"] {
        width: 4em;
        height: 4em;
        margin: auto;
      }
      .icon.small > svg[role="img"] {
        width: 2em;
        height: 2em;
      }
      .icon .custom-icon {
        font-size: 300%;
      }
      .icon.small .custom-icon {
        font-size: 120%;
      }

      /* @media (prefers-color-scheme: dark) {
  :root {
    color: #f6f6f6;
    background-color: #161a22;
  }

  * {
    color: #fafafa;
    fill: #fafafa;
    border-color: #77777777 !important;
  }

  p {
    color: #bbb;
  }
} */

      body[data-connected="true"] .unless-connected {
        display: none;
      }

      body:not([data-connected="true"]) .if-connected {
        display: none;
      }

      body:not([data-connected="true"]) .highlight-if-connected::before {
        padding: 0;
        inset: 0;
      }

      input[type="checkbox"]:not(:checked) + [role="menu"] {
        display: none;
      }

      [role="main"].left-only {
        .container {
          @media (min-width: 1536px), (min-width: 1636px), (min-width: 1736px) {
            max-width: calc(100vw - 28em);
          }

          @media (min-width: 115.2rem) {
            max-width: calc(100vw - 28em - (100vw - 115.2rem));
          }
        }
      }
    </style>
  </head>
  <body class="rtl:*">
    <main role="main" class={`flex-grow w-full ${mainClass ?? ""}`}>
      <Debug
        client:only="react"
        transition:persist
        transition:name="debug"
        lang={lang}
      />
      <Navbar transition:persist transition:name="navbar" />
      <div
        id="left"
        transition:name="left"
        transition:animate={leftTransition ?? "slide"}
      >
        <slot name="left" />
      </div>
      <div id="content" transition:name="content" transition:animate="fade">
        <slot />
      </div>
      <slot name="right" />
      <!-- <center class="section">
        <img
          src="/128x128.png"
          alt=""
          style="opacity: 20%; user-select: none; pointer-events: none;"
        />
      </center> -->
      <footer id="footer" class="section">
        <div class="container">
          <div class="columns">
            <div class="column flex flex-col">
              <a href={url("/")}>
                <h3 class="flex mt-0">
                  <img
                    src="/128x128.png"
                    alt=""
                    width="32"
                    height="32"
                    class="mr-2"
                  />
                  <span
                    class="font-semibold text-xl tracking-tight text-black dark:text-white"
                  >
                    Stack
                  </span>
                </h3>
              </a>
              <small class="subtle">
                © {new Date().getFullYear()} Codename
              </small>
            </div>
            <nav class="column flex flex-col gap-2">
              <h4>{t("Stack")}</h4>
              <a href={url("/")}>{t("Stacks")}</a>
              <a href={url("/alternativesto")}>{t("Catalog")}</a>
              <a href={url("/recipes")}>{t("Recipes")}</a>
            </nav>
            <nav class="column flex flex-col gap-2">
              <h4>Stack.lol</h4>
              <a
                href="https://github.com/codename-co/stack"
                target="_blank"
                rel="noopener noreferrer"
                title="GitHub"
              >
                <Logo slug="github" /> GitHub
              </a>
              <a href={url("/rss")} rel="noopener noreferrer">
                <Logo slug="rss" /> RSS feed
              </a>
              <a href={url("/api")}>
                <Logo slug="json" /> API
              </a>
              <div>
                <DarkModeSwitcher client:only="react">
                  Dark mode
                </DarkModeSwitcher>
              </div>
            </nav>
          </div>
        </div>
      </footer>
    </main>

    <script is:inline>
      // Preserve dark mode on page transitions
      document.addEventListener("astro:before-swap", (event) => {
        event.newDocument.getRootNode().children[0].className =
          globalThis.document.getRootNode().children[0].className;
      });
    </script>

    <script>
      // If the user preferred language is not english, redirect to the translated page.
      import { languages } from "~i18n/locales";

      const handleUserLanguage = () => {
        const lang = navigator.language.split("-")[0];
        const visited = localStorage.getItem("lang");
        if (visited) {
          return;
        }
        localStorage.setItem("lang", "1");
        if (lang === "en") {
          return;
        }
        const langAvailable = Object.keys(languages).includes(lang);
        if (!langAvailable) {
          return;
        }
        location.pathname =
          `/${lang}/${location.pathname.replace(/^\/[a-z]{2}[\/$]/, "")}`.replaceAll(
            "//",
            "/"
          );
      };

      handleUserLanguage();
    </script>
    <!-- <style is:global>
      @view-transition {
        navigation: auto;
      }
    </style> -->
  </body>
</html>
