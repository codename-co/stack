# SPDX-License-Identifier: MIT
# This is a https://stack.lol docker compose file.

services:
  web:
    image: wger/server:${WGER_VERSION:-2.3-dev}
    depends_on:
      db:
        condition: service_healthy
      cache:
        condition: service_healthy
    env_file: .env
    volumes:
      - static:/home/wger/static
      - media:/home/wger/media
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8000
      interval: 10s
      timeout: 5s
      start_period: 300s
      retries: 5
    restart: unless-stopped

  nginx:
    image: nginx:stable
    depends_on:
      - web
    volumes:
      - ./config/nginx.conf:/etc/nginx/conf.d/default.conf
      - static:/wger/static:ro
      - media:/wger/media:ro
    healthcheck:
      test: service nginx status
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped
    labels:
      dash.url: https://$PROJECT.$DOMAIN
      traefik.http.routers.nginx.rule: Host(`$PROJECT.$DOMAIN`)
      traefik.http.services.nginx.loadbalancer.server.port: 80

  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=wger
      - POSTGRES_PASSWORD=wger
      - POSTGRES_DB=wger
    volumes:
      - postgres-data:/var/lib/postgresql/data/
    healthcheck:
      test: pg_isready -U wger
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  cache:
    image: redis
    volumes:
      - redis-data:/data
    healthcheck:
      test: redis-cli ping
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  celery_worker:
    image: wger/server:latest
    command: /start-worker
    env_file: .env
    volumes:
      - media:/home/wger/media
    depends_on:
      web:
        condition: service_healthy
    healthcheck:
      test: celery -A wger inspect ping
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  celery_beat:
    image: wger/server:latest
    command: /start-beat
    volumes:
      - celery-beat:/home/wger/beat/
    env_file: .env
    depends_on:
      celery_worker:
        condition: service_healthy

volumes:
  postgres-data:
  celery-beat:
  redis-data:
  media:
  static:
