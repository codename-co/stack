# SPDX-License-Identifier: MIT
# This is a https://stack.lol docker compose file.

services:
  litellm:
    image: ghcr.io/berriai/litellm:main-v${LITELLM_VERSION:-1.56.4}
    # ports:
    #   - "4000:4000"
    environment:
      DATABASE_URL: "postgresql://llmproxy:dbpassword9090@litellm-db:5432/litellm"
      STORE_MODEL_IN_DB: "True" # allows adding models to proxy via UI
    env_file:
      - .env # Load local .env file
    labels:
      dash.url: https://$PROJECT.$DOMAIN
      traefik.http.routers.litellm.rule: Host(`$PROJECT.$DOMAIN`)
      traefik.http.services.litellm.loadbalancer.server.port: 4000

  litellm-db:
    image: postgres
    restart: always
    environment:
      POSTGRES_DB: litellm
      POSTGRES_USER: llmproxy
      POSTGRES_PASSWORD: dbpassword9090
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d litellm -U llmproxy"]
      interval: 1s
      timeout: 5s
      retries: 10

  litellm-prometheus:
    image: prom/prometheus
    volumes:
      - prometheus_data:/prometheus
    configs:
      - source: prometheus.yml
        target: /etc/prometheus/prometheus.yml
    # ports:
    #   - "9090:9090"
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--storage.tsdb.retention.time=15d"
    restart: always

configs:
  prometheus.yml:
    content: |
      global:
        scrape_interval: 15s

      scrape_configs:
        - job_name: 'litellm'
          static_configs:
            - targets: ['litellm:4000']  # Assuming Litellm exposes metrics at port 4000

volumes:
  prometheus_data:
    driver: local
