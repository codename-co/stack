# Original <https://github.com/coollabsio/coolify/blob/676f616efa668e92e3adda7c87cdea685f1000a5/docker-compose.prod.yml>

services:
  coolify:
    # container_name: coolify
    image: ghcr.io/coollabsio/coolify:${COOLIFY_VERSION:-4.0.0-beta.380}
    restart: always
    working_dir: /var/www/html
    extra_hosts:
      - host.docker.internal:host-gateway
    networks:
      - coolify
    volumes:
      # - type: bind
      #   source: /data/coolify/source/.env
      #   target: /var/www/html/.env
      #   read_only: true
      - ./.env:/var/www/html/.env:ro
      - ssh-keys:/var/www/html/storage/app/ssh/keys
      - ssh-mux:/var/www/html/storage/app/ssh/mux
      - applications:/var/www/html/storage/app/applications
      - databases:/var/www/html/storage/app/databases
      - services:/var/www/html/storage/app/services
      - backups:/var/www/html/storage/app/backups
      - webhooks-during-maintenance:/var/www/html/storage/app/webhooks-during-maintenance
    configs:
      - source: ssh-public-key
        target: /data/coolify/ssh/keys/id.root@host.docker.internal.pub
      - source: ssh-private-key
        target: /data/coolify/ssh/keys/id.root@host.docker.internal
    environment:
      - APP_ENV=production
      - APP_NAME
      - APP_ID
      - APP_KEY
      - APP_URL
      - APP_DEBUG
      - DB_DATABASE
      - DB_USERNAME
      - DB_PASSWORD
      - DB_HOST
      - DB_PORT
      - DB_CONNECTION
      - QUEUE_CONNECTION
      - REDIS_HOST
      - REDIS_PASSWORD
      - HORIZON_BALANCE
      - HORIZON_MIN_PROCESSES
      - HORIZON_MAX_PROCESSES
      - HORIZON_BALANCE_MAX_SHIFT
      - HORIZON_BALANCE_COOLDOWN
      - SSL_MODE=off
      - PHP_MEMORY_LIMIT
      - PHP_PM_CONTROL=dynamic
      - PHP_PM_START_SERVERS=1
      - PHP_PM_MIN_SPARE_SERVERS=1
      - PHP_PM_MAX_SPARE_SERVERS=10
      - PUSHER_HOST
      - PUSHER_BACKEND_HOST
      - PUSHER_PORT
      - PUSHER_BACKEND_PORT
      - PUSHER_SCHEME
      - PUSHER_APP_ID
      - PUSHER_APP_KEY
      - PUSHER_APP_SECRET
      - TERMINAL_PROTOCOL
      - TERMINAL_HOST
      - TERMINAL_PORT
      - AUTOUPDATE
      - SSH_MUX_ENABLED
      - SSH_MUX_PERSIST_TIME
    # ports:
    #   - "${APP_PORT:-8000}:8080"
    # expose:
    #   - "${APP_PORT:-8000}"
    healthcheck:
      test: curl --fail http://127.0.0.1:8080/api/health || exit 1
      interval: 5s
      retries: 10
      timeout: 2s
    links:
      - coolify-postgres:postgres
    depends_on:
      coolify-postgres:
        condition: service_healthy
      coolify-redis:
        condition: service_healthy
      coolify-soketi:
        condition: service_healthy
    labels:
      dash.url: https://$PROJECT.$DOMAIN
      traefik.http.routers.coolify.rule: Host(`$PROJECT.$DOMAIN`)
      traefik.http.services.coolify.loadbalancer.server.port: 8080

  coolify-postgres:
    image: postgres:15-alpine
    # container_name: coolify-db
    restart: always
    networks:
      - coolify
    volumes:
      - coolify-db:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: "${DB_USERNAME}"
      POSTGRES_PASSWORD: "${DB_PASSWORD}"
      POSTGRES_DB: "${DB_DATABASE:-coolify}"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${DB_USERNAME}",
          "-d",
          "${DB_DATABASE:-coolify}",
        ]
      interval: 5s
      retries: 10
      timeout: 2s

  coolify-redis:
    image: redis:7-alpine
    # container_name: coolify-redis
    restart: always
    networks:
      - coolify
    command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
    environment:
      REDIS_PASSWORD: "${REDIS_PASSWORD}"
    volumes:
      - coolify-redis:/data
    healthcheck:
      test: redis-cli ping
      interval: 5s
      retries: 10
      timeout: 2s

  coolify-soketi:
    # container_name: coolify-realtime
    extra_hosts:
      - host.docker.internal:host-gateway
    restart: always
    networks:
      - coolify
    image: "ghcr.io/coollabsio/coolify-realtime:1.0.5"
    ports:
      - "${SOKETI_PORT:-6001}:6001"
      - "6002:6002"
    volumes:
      - ssh-keys:/var/www/html/storage/app/ssh/keys
      - ssh-mux:/var/www/html/storage/app/ssh/mux
    configs:
      - source: ssh-public-key
        target: /data/coolify/ssh/keys/id.root@host.docker.internal.pub
      - source: ssh-private-key
        target: /data/coolify/ssh/keys/id.root@host.docker.internal
    environment:
      APP_NAME: "${APP_NAME:-Coolify}"
      SOKETI_DEBUG: "${SOKETI_DEBUG:-false}"
      SOKETI_DEFAULT_APP_ID: "${PUSHER_APP_ID}"
      SOKETI_DEFAULT_APP_KEY: "${PUSHER_APP_KEY}"
      SOKETI_DEFAULT_APP_SECRET: "${PUSHER_APP_SECRET}"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "wget -qO- http://127.0.0.1:6001/ready && wget -qO- http://127.0.0.1:6002/ready || exit 1",
        ]
      interval: 5s
      retries: 10
      timeout: 2s

configs:
  ssh-public-key:
    name: id.root@host.docker.internal.pub
    content: |
      ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIERNPoV/p+V/Ns1rOu3oi5Wquik0xlMtGGgM7T9GsvCU root@coolify
  ssh-private-key:
    name: id.root@host.docker.internal
    content: |
      -----BEGIN OPENSSH PRIVATE KEY-----
      b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAAAMwAAAAtzc2gtZW
      QyNTUxOQAAACBETT6Ff6flfzbNazrt6IuVqropNMZTLRhoDO0/RrLwlAAAAJAWvdS7Fr3U
      uwAAAAtzc2gtZWQyNTUxOQAAACBETT6Ff6flfzbNazrt6IuVqropNMZTLRhoDO0/RrLwlA
      AAAECAl40u7DEmRR4TI8dT/ayctvoPGCaXAwiDWCf9uGU7JkRNPoV/p+V/Ns1rOu3oi5Wq
      uik0xlMtGGgM7T9GsvCUAAAADHJvb3RAY29vbGlmeQE=
      -----END OPENSSH PRIVATE KEY-----

networks:
  coolify:
    name: coolify
    driver: bridge
    external: false

volumes:
  coolify-db:
    name: coolify-db
  coolify-redis:
    name: coolify-redis
  ssh-keys:
  ssh-mux:
  applications:
  databases:
  services:
  backups:
  webhooks-during-maintenance:
