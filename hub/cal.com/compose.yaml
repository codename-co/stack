# Use postgres/example user/password credentials
services:
  calcom-database:
    # container_name: database
    image: postgres
    restart: always
    volumes:
      - database-data:/var/lib/postgresql/data/
    env_file: .env
    networks:
      - stack

  calcom:
    image: calcom.docker.scarf.sh/calcom/cal.com:v${CALCOM_VERSION:-4.7.8}
    platform: linux/amd64
    restart: always
    networks:
      - stack
    # ports:
    #   - 3000:3000
    env_file: .env
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${DATABASE_HOST}/${POSTGRES_DB}
      - DATABASE_DIRECT_URL=${DATABASE_URL}
    depends_on:
      - calcom-database
    labels:
      dash.url: https://$PROJECT.$DOMAIN
      traefik.http.routers.calcom.rule: Host(`$PROJECT.$DOMAIN`)
      traefik.http.services.calcom.loadbalancer.server.port: 3000

  # Optional use of Prisma Studio. In production, comment out or remove the section below to prevent unwanted access to your database.
  calcom-studio:
    image: calcom.docker.scarf.sh/calcom/cal.com:v${CALCOM_VERSION:-4.7.8}
    platform: linux/amd64
    restart: always
    networks:
      - stack
    # ports:
    #   - 5555:5555
    env_file: .env
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${DATABASE_HOST}/${POSTGRES_DB}
      - DATABASE_DIRECT_URL=${DATABASE_URL}
    depends_on:
      - calcom-database
    command:
      - npx
      - prisma
      - studio
    labels:
      dash.url: https://$PROJECT.$DOMAIN/api/v2
      traefik.http.routers.calcom-studio.rule: Host(`$PROJECT.$DOMAIN`) && PathPrefix(`/api/`)
      traefik.http.services.calcom-studio.loadbalancer.server.port: 5555
# END SECTION: Optional use of Prisma Studio.

networks:
  stack:
    name: stack
    external: false

volumes:
  database-data:
