PROJECT=grist
DOMAIN=stack.localhost

# comma-separated list of permitted domains to use in webhooks (e.g. webhook.site,zapier.com). You can set this to * to allow all domains, but if doing so, we recommend using a carefully locked-down proxy (see GRIST_HTTPS_PROXY) if you do not entirely trust users. Otherwise services on your internal network may become vulnerable to manipulation.
# ALLOWED_WEBHOOK_DOMAINS=
# doc worker url, set when starting an individual doc worker (other servers will find doc worker urls via redis)
APP_DOC_URL=https://$PROJECT.$DOMAIN
# like APP_DOC_URL but used by the home server to reach the server using an internal domain name resolution (like in a docker environment). It only makes sense to define this value in the doc worker. Defaults to APP_DOC_URL.
# APP_DOC_INTERNAL_URL=
# url prefix for home api (home and doc servers need this)
APP_HOME_URL=https://$PROJECT.$DOMAIN
# like APP_HOME_URL but used by the home and the doc servers to reach any home workers using an internal domain name resolution (like in a docker environment). Defaults to APP_HOME_URL
# APP_HOME_INTERNAL_URL=
# url prefix for static resources
# APP_STATIC_URL=
# set to "true" to include custom.css (from APP_STATIC_URL) in static pages
# APP_STATIC_INCLUDE_CUSTOM_CSS=
# URL at which to serve/expect plugin content.
# APP_UNTRUSTED_URL=
# Maximum number of rows allowed in ActionHistory before pruning (up to a 1.25 grace factor). Defaults to 1000. ⚠️ A too low value may make the "Work on a copy" feature malfunction
# GRIST_ACTION_HISTORY_MAX_ROWS=
# Maximum number of rows allowed in ActionHistory before pruning (up to a 1.25 grace factor). Defaults to 1Gb. ⚠️ A too low value may make the "Work on a copy" feature malfunction
# GRIST_ACTION_HISTORY_MAX_BYTES=
# set to "true" to support multiple base domains (careful, host header should be trustworthy)
# GRIST_ADAPT_DOMAIN=
# directory containing Grist sandbox and assets (specifically the sandbox and static subdirectories).
# GRIST_APP_ROOT=
# wait this long after a doc change before making a backup
# GRIST_BACKUP_DELAY_SECS=
# if set, offer diagnostics at /boot/GRIST_BOOT_KEY
# GRIST_BOOT_KEY=
# Directory in which to store documents. Defaults to docs/ relative to the Grist application directory. In Grist's default Docker image, its default value is /persist/docs so that it will be used as a mounted volume.
# GRIST_DATA_DIR=
# if set, login as this user if no other credentials presented
# GRIST_DEFAULT_EMAIL=
# if set, this controls enabled features and limits of new sites. See names of PRODUCTS in Product.ts.
# GRIST_DEFAULT_PRODUCT=
# Locale to use as fallback when Grist cannot honour the browser locale.
# GRIST_DEFAULT_LOCALE=
# in hosted Grist, Grist is served from subdomains of this domain. Defaults to "getgrist.com".
GRIST_DOMAIN=$PROJECT.$DOMAIN
# enables experimental plugins
# GRIST_EXPERIMENTAL_PLUGINS=
# enables the REQUEST function. This function performs HTTP requests in a similar way to requests.request. This function presents a significant security risk, since it can let users call internal endpoints when Grist is available publicly. This function can also cause performance issues. Unset by default.
# GRIST_ENABLE_REQUEST_FUNCTION=
# comma-separated list of UI features to disable. Allowed names of parts: helpCenter,billing,templates,createSite,multiSite,multiAccounts,sendToDrive,tutorials,supportGrist. If a part also exists in GRIST_UI_FEATURES, it will still be disabled.
# GRIST_HIDE_UI_ELEMENTS=
# hostname to use when listening on a port.
# GRIST_HOST=
# if set, use this proxy for webhook payload delivery or fetching custom widgets repository from url.
# GRIST_HTTPS_PROXY=
# for subdomains of form o-, expect or produce o-${GRIST_ID_PREFIX}.
# GRIST_ID_PREFIX=
# if set, Grist will not use a session for authentication.
# GRIST_IGNORE_SESSION=
# if set, will load the referenced URL in a <script> tag on all app pages.
# GRIST_INCLUDE_CUSTOM_SCRIPT_URL=
# path to Grist instance configuration files, for Grist server.
# GRIST_INST_DIR=
# if set to true, sites shared with the public will be listed for anonymous users. Defaults to false.
# GRIST_LIST_PUBLIC_SITES=
# if set, Grist can assume that if a url targeted at a doc worker returns a 404, that worker is gone
# GRIST_MANAGED_WORKERS=
# max allowed size for attachments (0 or empty for unlimited).
# GRIST_MAX_UPLOAD_ATTACHMENT_MB=
# max allowed size for imports (except .grist files) (0 or empty for unlimited).
# GRIST_MAX_UPLOAD_IMPORT_MB=
# if set, all translated langauages are offered to the user (by default, only languages with a special 'good enough' key set are offered to user).
# GRIST_OFFER_ALL_LANGUAGES=
# if true, encode org in path rather than domain
# GRIST_ORG_IN_PATH=
# a string to append to the end of the <title> in HTML documents. Defaults to " - Grist". Set to _blank for no suffix at all.
# GRIST_PAGE_TITLE_SUFFIX=
# Deprecated, and interpreted as a synonym for GRIST_FORWARD_AUTH_HEADER.
# GRIST_PROXY_AUTH_HEADER=
# optional url for an api that allows servers to be (un)registered with a load balancer
# GRIST_ROUTER_URL=
# set to "true" to access home server and doc workers on the same protocol-host-port as the top-level page, same as for custom domains (careful, host header should be trustworthy)
# GRIST_SERVE_SAME_ORIGIN=
# the types of server to setup. Comma separated values which may contain "home", "docs", static" and/or "app". Defaults to "home,docs,static".
# GRIST_SERVERS=
# if set, overrides the name of Grist's cookie
# GRIST_SESSION_COOKIE=
# if set, associates the cookie with the given domain - otherwise defaults to GRIST_DOMAIN
# GRIST_SESSION_DOMAIN=
# a key used to encode sessions
# GRIST_SESSION_SECRET=
# if set, Grist will ignore any bundled widgets included via NPM packages.
# GRIST_SKIP_BUNDLED_WIDGETS=
# When set to 'false' deny anonymous users access to the home page
# GRIST_ANON_PLAYGROUND=
# Much like GRIST_ANON_PLAYGROUND but don't support anonymous access at all (features like sharing docs publicly requires authentication)
# GRIST_FORCE_LOGIN=
# set to an org "domain" to pin client to that org
# GRIST_SINGLE_ORG=
# set to an org "domain" to show public docs from that org
# GRIST_TEMPLATE_ORG=
# set the help center link ref
# GRIST_HELP_CENTER=
# if set, adds terms of service link
# GRIST_TERMS_OF_SERVICE_URL=
# set the link to the human help (example: email adress or meeting scheduling tool)
# FREE_COACHING_CALL_URL=
# set the link to contact support on error pages (example: email adress or online form)
# GRIST_CONTACT_SUPPORT_URL=
# if set to 'true', show UI for anonymous access (not shown by default)
# GRIST_SUPPORT_ANON=
# if set, give a user with the specified email support powers. The main extra power is the ability to share sites, workspaces, and docs with all users in a listed way.
# GRIST_SUPPORT_EMAIL=
# the URL of the preview image when sharing the link on websites like social medias or chat applications.
# GRIST_OPEN_GRAPH_PREVIEW_IMAGE=
# the telemetry level. Can be set to: off (default), limited, or full.
GRIST_TELEMETRY_LEVEL=off
# if set, CPU throttling is enabled
# GRIST_THROTTLE_CPU=
# if set, plugins are expect to be served from the same host as the rest of the Grist app, rather than from a distinct host. Ordinarily, plugins are served from a distinct host so that the cookies used by the Grist app are not automatically available to them. Enable this only if you understand the security implications.
# GRIST_TRUST_PLUGINS=
# an extra path to look for plugins in - Grist will scan for plugins in $GRIST_USER_ROOT/plugins.
# GRIST_USER_ROOT=
# comma-separated list of UI features to enable. Allowed names of parts: helpCenter,billing,templates,createSite,multiSite,multiAccounts,sendToDrive,tutorials,supportGrist. If a part also exists in GRIST_HIDE_UI_ELEMENTS, it won't be enabled.
# GRIST_UI_FEATURES=
# if set, plugins will be served from the given port. This is an alternative to setting APP_UNTRUSTED_URL.
# GRIST_UNTRUSTED_PORT=
# a url pointing to a widget manifest, by default https://github.com/gristlabs/grist-widget/releases/download/latest/manifest.json is used
# GRIST_WIDGET_LIST_URL=
# When set to true, log HTTP requests and responses information. Defaults to false.
# GRIST_LOG_HTTP=
# When this variable and GRIST_LOG_HTTP are set to true , log the body along with the HTTP requests. ⚠️ Be aware it may leak confidential information in the logs.⚠️ Defaults to false.
# GRIST_LOG_HTTP_BODY=
# session cookie max age, defaults to 90 days; can be set to "none" to make it a session cookie
# COOKIE_MAX_AGE=
# port number to listen on for REST API server; if set to "share", add API endpoints to regular grist port.
# HOME_PORT=
# port number to listen on for Grist server
# PORT=
# optional redis server for browser sessions and db query caching
# REDIS_URL=
# optional. Define the caps for tracking buckets. Usage: {"hour": 25, "day": 32, "isoWeek": 12, "month": 96, "year": 1000}
# GRIST_SNAPSHOT_TIME_CAP=
# optional. Number of recent snapshots to retain unconditionally for a document, regardless of when they were made
# GRIST_SNAPSHOT_KEEP=
# optional. If set, serve the Prometheus metrics on the specified port number. ⚠️ Be sure to use a port which is not publicly exposed ⚠️.
# GRIST_PROMCLIENT_PORT=
# optional. If set, enable the SCIM API Endpoint (experimental)
# GRIST_ENABLE_SCIM=

# optional. An API key to pass when making requests to an external AI conversational endpoint.
# ASSISTANT_API_KEY=
# optional. A chat-completion style endpoint to call. Not needed if OpenAI is being used.
# ASSISTANT_CHAT_COMPLETION_ENDPOINT=
# optional. If set, this string is passed along in calls to the AI conversational endpoint.
# ASSISTANT_MODEL=
# optional. If set, requests that fail because of a context length limitation will be retried with this model set.
# ASSISTANT_LONGER_CONTEXT_MODEL=
# optional. Synonym for ASSISTANT_API_KEY that assumes an OpenAI endpoint is being used. Sign up for an account on OpenAI and then generate a secret key here.
# OPENAI_API_KEY=

# can be gvisor, pynbox, unsandboxed, docker, or macSandboxExec. If set, forces Grist to use the specified kind of sandbox.
# GRIST_SANDBOX_FLAVOR=
# a program or image name to run as the sandbox. See NSandbox.ts for nerdy details.
# GRIST_SANDBOX=
# can be 2 or 3. If set, documents without an engine setting are assumed to use the specified version of python. Not all sandboxes support all versions.
# PYTHON_VERSION=
# can be 2 or 3. If set, newly created documents have an engine setting set to python2 or python3. Not all sandboxes support all versions.
# PYTHON_VERSION_ON_CREATION=

# if set, trust the specified header (e.g. "x-forwarded-user") to contain authorized user emails, and enable "forward auth" logins.
# GRIST_FORWARD_AUTH_HEADER=
# if GRIST_FORWARD_AUTH_HEADER is set, Grist will listen at this path for logins. Defaults to /auth/login.
# GRIST_FORWARD_AUTH_LOGIN_PATH=
# if GRIST_FORWARD_AUTH_HEADER is set, Grist will forward to this path when user logs out.
# GRIST_FORWARD_AUTH_LOGOUT_PATH=

# set to the Google Client Id to be used with Google API client
# GOOGLE_CLIENT_ID=
# set to the Google Client Secret to be used with Google API client
# GOOGLE_CLIENT_SECRET=
# set to the Google API Key to be used with Google API client (accessing public files)
# GOOGLE_API_KEY=
# set to the scope requested for Google Drive integration (defaults to drive.file)
# GOOGLE_DRIVE_SCOPE=

# database filename for sqlite or database name for other db types
# TYPEORM_DATABASE=
# host for db
# TYPEORM_HOST=
# set to 'true' to see all sql queries
# TYPEORM_LOGGING=
# password to use
# TYPEORM_PASSWORD=
# port number for db if not the default for that db type
# TYPEORM_PORT=
# set to 'sqlite' or 'postgres'
# TYPEORM_TYPE=
# username to connect as
# TYPEORM_USERNAME=
# any other properties to pass to TypeORM in JSON format
# TYPEORM_EXTRA=

# optional. When the container runs as the root user, this is the user the Grist services run as. Overrides the default.
# GRIST_DOCKER_USER=
# optional. When the container runs as the root user, this is the group the Grist services run as. Overrides the default.
# GRIST_DOCKER_GROUP=

# a socket used for out-of-channel communication during tests only.
# GRIST_TESTING_SOCKET=
# if set, adds https ports at the specified offset. This is useful in testing.
# GRIST_TEST_HTTPS_OFFSET=
# if set, contains filename of SSL certificate.
# GRIST_TEST_SSL_CERT=
# if set, contains filename of SSL private key.
# GRIST_TEST_SSL_KEY=
# allow fake unauthenticated test logins (suitable for dev environment only).
# GRIST_TEST_LOGIN=
# if set, then the home server will serve a mock version of router api at /test/router
# GRIST_TEST_ROUTER=
# pattern for selecting specific tests to run (e.g. env GREP_TESTS=ActionLog yarn test).
# GREP_TESTS=
