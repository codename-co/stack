services:
  elasticsearch:
    image: elasticsearch:${IMAGE_VERSION}
    # container_name: es
    environment:
      discovery.type: single-node
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
    ports:
      - 9200:9200
      - 9300:9300
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl --silent --fail localhost:9200/_cluster/health || exit 1",
        ]
      interval: 10s
      timeout: 10s
      retries: 3
    networks:
      - elastic

  logstash:
    image: logstash:${IMAGE_VERSION}
    # container_name: log
    environment:
      discovery.seed_hosts: logstash
      LS_JAVA_OPTS: "-Xms512m -Xmx512m"
    volumes:
      - logstash_log:/home/nginx.log
    configs:
      - source: logstash-nginx.config
        target: /usr/share/logstash/pipeline/logstash-nginx.config
    ports:
      - 5000:5000/tcp
      - 5000:5000/udp
      - 5044:5044
      - 9600:9600
    depends_on:
      - elasticsearch
    networks:
      - elastic
    command: logstash -f /usr/share/logstash/pipeline/logstash-nginx.config

  kibana:
    image: kibana:${IMAGE_VERSION}
    # container_name: kib
    # ports:
    #   - :5601
    depends_on:
      - elasticsearch
    labels:
      dash.url: http://kibana.$PROJECT.$DOMAIN
      traefik.http.routers.kibana.rule: Host(`kibana.$PROJECT.$DOMAIN`)
      traefik.http.services.kibana.loadbalancer.server.port: 5601
    networks:
      - elastic

configs:
  logstash-nginx.config:
    content: |
      input {
        file {
          path => "/home/nginx.log"
          start_position => "beginning"
          sincedb_path => "/dev/null"
        }
      }

      filter {
        json {
          source => "message"
        }
        geoip {
          source => "remote_ip"
        }
        useragent {
          source => "agent"
          target => "useragent"
        }
      }

      output {
        elasticsearch {
          hosts => ["http://elasticsearch:9200"]
          index => "nginx"
        }
        stdout {
          codec => rubydebug
        }
      }

networks:
  elastic:
    driver: bridge

volumes:
  logstash_log:
    driver: local
