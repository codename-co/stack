# SPDX-License-Identifier: MIT
# This is a https://stack.lol docker compose file.

services:
  openwebui:
    image: ghcr.io/open-webui/open-webui:${OPEN_WEBUI_VERSION:-0.5.20}
    env_file: .env
    volumes:
      - open-webui:/app/backend/data:rw
      # - ./static/favicon.png:/app/build/static/favicon.png:ro
    labels:
      dash.name: Open WebUI
      dash.icon: ollama
      dash.desc: User-friendly AI Interface
      dash.url: https://$PROJECT.$DOMAIN
      traefik.http.routers.openwebui.rule: Host(`$PROJECT.$DOMAIN`)
      traefik.http.services.openwebui.loadbalancer.server.port: 8080
    links:
      - openwebui-searxng
      - openwebui-pipelines
    networks:
      - internet
      - public
    extra_hosts:
      - host.docker.internal:host-gateway
    stop_grace_period: 0s
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 10s
      timeout: 1s
      retries: 5
      start_period: 15s
      start_interval: 5s

  openwebui-searxng:
    image: searxng/searxng
    configs:
      - source: searxng-limiter.toml
        target: /etc/searxng/searxng-limiter.toml
      - source: searxng-settings.yml
        target: /etc/searxng/settings.yml
      - source: searxng-uwsgi.ini
        target: /etc/searxng/uwsgi.ini
    restart: unless-stopped
    labels:
      dash.name: SearxNG
      dash.desc: Internet metasearch engine
      dash.url: https://$PROJECT-searxng.$DOMAIN
      traefik.http.routers.openwebui-searxng.rule: Host(`$PROJECT-searxng.$DOMAIN`)
      traefik.http.services.openwebui-searxng.loadbalancer.server.port: 8080
    networks:
      - internet
    stop_grace_period: 0s

  openwebui-pipelines:
    image: ghcr.io/open-webui/pipelines:main-minimum
    volumes:
      - pipelines:/app/pipelines:rw
    restart: unless-stopped
    labels:
      dash.name: Pipelines
      dash.icon: pipelines
      dash.desc: AI Pipelines
      dash.url: https://$PROJECT-pipelines.$DOMAIN
      traefik.http.routers.openwebui-pipelines.rule: Host(`$PROJECT-pipelines.$DOMAIN`)
      traefik.http.services.openwebui-pipelines.loadbalancer.server.port: 9099
    extra_hosts:
      - host.docker.internal:host-gateway
    stop_grace_period: 0s

configs:
  searxng-limiter.toml:
    content: |
      [botdetection.ip_limit]
      # activate link_token method in the ip_limit method
      link_token = true

  searxng-settings.yml:
    content: |
      # see https://docs.searxng.org/admin/settings/settings.html#settings-use-default-settings
      use_default_settings: true

      server:
        secret_key: $SEARXNG_SECRET_KEY
        limiter: false
        image_proxy: true
        port: 8080
        bind_address: 0.0.0.0

      ui:
        static_use_hash: true

      search:
        safe_search: 0
        autocomplete: ""
        default_lang: ""
        formats:
          - html
          - json

  searxng-uwsgi.ini:
    content: |
      [uwsgi]
      # Who will run the code
      uid = searxng
      gid = searxng

      # Number of workers (usually CPU count)
      # default value: %k (= number of CPU core, see Dockerfile)
      workers = %k

      # Number of threads per worker
      # default value: 4 (see Dockerfile)
      threads = 4

      # The right granted on the created socket
      chmod-socket = 666

      # Plugin to use and interpreter config
      single-interpreter = true
      master = true
      plugin = python3
      lazy-apps = true
      enable-threads = 4

      # Module to import
      module = searx.webapp

      # Virtualenv and python path
      pythonpath = /usr/local/searxng/
      chdir = /usr/local/searxng/searx/

      # automatically set processes name to something meaningful
      auto-procname = true

      # Disable request logging for privacy
      disable-logging = true
      log-5xx = true

      # Set the max size of a request (request-body excluded)
      buffer-size = 8192

      # No keep alive
      # See https://github.com/searx/searx-docker/issues/24
      add-header = Connection: close

      # uwsgi serves the static files
      static-map = /static=/usr/local/searxng/searx/static
      # expires set to one day
      static-expires = /* 86400
      static-gzip-all = True
      offload-threads = 4

volumes:
  open-webui:
  pipelines:

networks:
  default:
    driver: bridge
    internal: true
  public:
    driver: bridge
  internet:
    driver: bridge
